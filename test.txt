// 'use client';
// import { zodResolver } from '@hookform/resolvers/zod';
// import { useEffect, useState, useTransition } from 'react';
// import { useForm } from 'react-hook-form';
// import * as zod from 'zod';
// import { ClaimType } from '@prisma/client';

// import { register } from '@/actions/register';
// import { CardWrapper } from '@/components/auth/CardWrapper';
// import { FormError } from '@/components/form-messages/FormError';
// import { FormSuccess } from '@/components/form-messages/FormSuccess';
// import { Button } from '@/components/ui/button';
// import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';
// import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
// import { Input } from '@/components/ui/input';
// import { RegisterSchema } from '@/schemas';

// export function RegisterForm() {
//   const [error, setError] = useState<string | undefined>('');
//   const [success, setSuccess] = useState<string | undefined>('');
//   const [isPending, startTransition] = useTransition();
//   const form = useForm<zod.infer<typeof RegisterSchema>>({
//     resolver: zodResolver(RegisterSchema),
//     defaultValues: {
//       email: '',
//       password: '',
//       name: '',
//       phone: '',
//     },
//   });

//   const onSubmit = (values: zod.infer<typeof RegisterSchema>) => {
//     setError('');
//     setSuccess('');
//     startTransition(() => {
//       register(values).then((data) => {
//         setError(data.error);
//         setSuccess(data.success);
//       });
//     });
//   };
//   return (
//     <CardWrapper
//       backButtonHref='/login'
//       backButtonLabel='Already have an account?'
//       headerLabel='Create an account'
//       showSocial
//     >
//       <Form {...form}>
//         <form className='space-y-4' onSubmit={form.handleSubmit(onSubmit)}>
//           <div className='space-y-4'>
//             <FormField
//               control={form.control}
//               name='name'
//               render={({ field }) => (
//                 <FormItem>
//                   <FormLabel>Name</FormLabel>
//                   <FormControl>
//                     <Input {...field} disabled={isPending} placeholder='Your Name' />
//                   </FormControl>
//                   <FormMessage />
//                 </FormItem>
//               )}
//             />
//             <FormField
//               control={form.control}
//               name='email'
//               render={({ field }) => (
//                 <FormItem>
//                   <FormLabel>Email</FormLabel>
//                   <FormControl>
//                     <Input {...field} disabled={isPending} placeholder='Your Email address' type='email' />
//                   </FormControl>
//                   <FormMessage />
//                 </FormItem>
//               )}
//             />
//             <FormField
//               control={form.control}
//               name='password'
//               render={({ field }) => (
//                 <FormItem>
//                   <FormLabel>Password</FormLabel>
//                   <FormControl>
//                     <Input {...field} disabled={isPending} placeholder='******' type='password' />
//                   </FormControl>
//                   <FormMessage />
//                 </FormItem>
//               )}
//             />
//             <FormField
//               control={form.control}
//               name='phone'
//               render={({ field }) => (
//                 <FormItem>
//                   <FormLabel>Phone</FormLabel>
//                   <FormControl>
//                     <Input {...field} disabled={isPending} placeholder='Phone number' />
//                   </FormControl>
//                   <FormMessage />
//                 </FormItem>
//               )}
//             />
//             <FormField
//               control={form.control}
//               name='claimType'
//               render={({ field }) => (
//                 <FormItem>
//                   <FormLabel>Claim Type</FormLabel>
//                   <Select
//                     // need to set the default value does not come from form defaults
//                     disabled={isPending}
//                     onValueChange={field.onChange}
//                   >
//                     <FormControl>
//                       <SelectTrigger>
//                         <SelectValue placeholder='Select Claim Type' />
//                       </SelectTrigger>
//                     </FormControl>
//                     <SelectContent>
//                       {Object.values(ClaimType).map((el) => (
//                         <SelectItem key={el} value={el}>
//                           {el.replaceAll('_', ' ')}
//                         </SelectItem>
//                       ))}
//                     </SelectContent>
//                   </Select>
//                   <FormMessage />
//                 </FormItem>
//               )}
//             />
//           </div>
//           <FormError message={error} />
//           <FormSuccess message={success} />
//           <Button className='w-full p-6' disabled={isPending} type='submit'>
//             Create an account
//           </Button>
//         </form>
//       </Form>
//     </CardWrapper>
//   );
// }
